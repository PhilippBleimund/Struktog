stages:
  - build
  - deploymaster
  - deploydev

packen:
  image: node:latest
  stage: build
  script:
    - PATH="./node_modules/.bin:$PATH"
    - npm install
    - webpack --mode production
    - cd build
    #- if [ "${CI_COMMIT_TAG}" != "" ]; then TAG="-${CI_COMMIT_TAG}"; else TAG=""; fi
    #- tar -czf ${CI_PROJECT_NAME}${TAG}.tar.gz *
    #- mv ./${CI_PROJECT_NAME}${TAG}.tar.gz ..
    - cd ..
  artifacts:
    paths:
      - ./build
      #- ${CI_PROJECT_NAME}${TAG}.tar.gz
  only:
    - webpack
    - development

deploymaster:
  image: alpine:latest
  stage: deploy
  script:
    - apk add --no-cache sshpass
    - apk add --no-cache openssh
    - export SSHPASS=${PASS}
    - sshpass -e ssh deploy@dditools.inf.tu-dresden.de:dditools/struktog "ls"
    - sshpass -e scp -o stricthostkeychecking=no -P 44 -r ./build deploy@dditools.inf.tu-dresden.de:dditools/struktog
  variables:
    GIT_STRATEGY: none
  only:
    - webpack

deploymaster:
  image: alpine:latest
  stage: deploy
  script:
    - apk add --no-cache sshpass
    - apk add --no-cache openssh
    - export SSHPASS=${PASS}
    - sshpass -e scp -o stricthostkeychecking=no -P 44 -r ./build deploy@dditools.inf.tu-dresden.de:dditools/dev/struktog
  variables:
    GIT_STRATEGY: none
  only:
    - development
